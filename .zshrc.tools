alias d="todo.sh"
alias doing="vim $HOME/Dropbox/plaintexts/doing/todo.txt"
alias plan="vim $HOME/Dropbox/plaintexts/planning.taskpaper"

alias edit-cheatsheet="vim $HOME/Dropbox/Work/cheatsheet.md"

alias git-first-commit="git log --date-order --format=%cI | tail -1"
alias git-commiter-last-month="git shortlog --summary --since='1 month ago'"

journal() {
  local target_dir="$HOME/Dropbox/plaintexts/journals"

  case "$1" in
    cd)
      cd "$target_dir"
      ;;
    ls)
      ls "$target_dir"
      ;;
    pwd)
      echo "$target_dir"
      ;;
    prev)
      pushd "$target_dir"
      local day_or_week=`date +%w`
      if [ $day_or_week == 1 ] ; then
        look_back=3
      else
        look_back=1
      fi
      local prevday=`date -d "$look_back day ago" +'%Y-%m-%d'`
      local file="$prevday".md
      echo "# $prevday\n" > $file
      if [ ! -f $file ]; then
        echo "# $prevday\n" > $file
      fi
      \vim $file -c 'setfiletype markdown'
      popd
      ;;
    next)
      pushd "$target_dir"
      local day_or_week=`date +%w`
      if [ $day_or_week == 5 ] ; then
        forwards=3
      else
        forwards=1
      fi
      local next=`date -d "$forwards day" +'%Y-%m-%d'`
      local file="$next".md
      if [ ! -f $file ]; then
        echo "# $next\n" > $file
      fi
      \vim $file -c 'setfiletype markdown'
      popd
      ;;
    *)
      pushd "$target_dir"
      local today=`date +%Y-%m-%d`
      local file="$today".md
      if [ ! -f $file ]; then
        echo "# $today\n" > $file
      fi
      \vim $file -c 'setfiletype markdown'
      popd
      ;;
  esac
}

note() {
  local notes_dir="$HOME/Dropbox/plaintexts/notes"

  case "$1" in
    cd)
      cd "$notes_dir"
      ;;
    ls)
      ls "$notes_dir"
      ;;
    pwd)
      echo "$notes_dir"
      ;;
    *)
      pushd "$notes_dir"
      local today=`date +%Y-%m-%d`

      if [ $# -eq 0 ]; then
        \vim "$today".md -c 'setfiletype markdown'
      else
        local file=$1_$today.md
        if [ ! -f $file ]; then
          echo "# $1\n\n$today\n\n\n" > $file
        fi
        \vim $file -c 'setfiletype markdown'
      fi
      popd
      ;;
  esac
}

# Open GitHub
gh() {
  open $(git config remote.origin.url | sed 's/.\{4\}$//')/$1$2
}
