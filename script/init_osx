#!/bin/bash

# Stop script if errors occur
trap 'echo Error: $0:$LINENO stopped; exit 1' ERR INT
set -e

. "$DOTFILES_ROOT/script/functions"

export PATH="/opt/homebrew/bin:$PATH"

: "Hombrew install" && {

  export HOMEBREW_NO_ANALYTICS=1

  if is_exists "brew"; then
    log_pass "Homebrew: already installed"
  else
    if ! is_exists "ruby"; then
        log_fail "error: require: ruby"
        exit 1
    fi

    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
    if is_exists "brew"; then
        brew doctor
    else
        log_fail "error: brew: failed to install"
        exit 1
    fi

    log_pass "brew: installed successfully"
  fi
}

function brew_install {
  brew list $1 &>/dev/null || brew install $1
}

: "Hombrew setup" && {

  export HOMEBREW_NO_AUTO_UPDATE=1

  brew analytics off

  brew list vim &>/dev/null || brew install vim
  brew list rename &>/dev/null || brew install rename
  brew list tree &>/dev/null || brew install tree
  brew list wget &>/dev/null || brew install wget

  brew_install bash
  brew_install bash-completion

  brew list exa &>/dev/null || brew install exa
  brew list fd &>/dev/null || brew install fd
  brew list rg &>/dev/null || brew install rg
  brew list zoxide &>/dev/null || brew install zoxide

  brew list tig &>/dev/null || brew install tig
  brew list tmux &>/dev/null || brew install tmux
  brew list reattach-to-user-namespace &>/dev/null || brew install reattach-to-user-namespace
  brew list urlview &>/dev/null || brew install urlview

  brew list bat &>/dev/null || brew install bat
  brew list fpp &>/dev/null || brew install fpp
  brew list ghq &>/dev/null || brew install ghq
  brew list fzf &>/dev/null || brew install fzf

  brew list starship &>/dev/null || brew install starship

  brew list rlwrap &>/dev/null || brew install rlwrap

  brew_install coreutils
  brew_install grep
  brew_install gawk
  brew_install gzip
  brew_install gnu-tar
  brew_install gnu-sed
  brew_install gnu-time

  brew list git &>/dev/null || brew install git
  brew list git-delta &>/dev/null || brew install git-delta

  brew list git-lfs &>/dev/null || brew install git-lfs
  brew list git-now &>/dev/null || brew install git-now
  brew list github/gh/gh &>/dev/null || brew install github/gh/gh

  if ! [ -d "$HOME/.config/bat/themes" ] ; then
    mkdir -p $HOME/.config/bat/themes
    git clone https://github.com/thara/gray-matter.git $HOME/.config/bat/themes/ || :
  fi

  brew list gpg2 &>/dev/null || brew install gpg2
  brew list pinentry-mac &>/dev/null || brew install pinentry-mac

  brew list mergepbx &>/dev/null || brew install mergepbx

  if [ -n "${DOTFILES_CASK:-}" ] ; then
    brew list dropbox &>/dev/null || brew install dropbox
    brew list visual-studio-code &>/dev/null || brew install visual-studio-code
    brew list karabiner-elements &>/dev/null || brew install karabiner-elements
    brew list github &>/dev/null || brew install github
    brew list docker &>/dev/null || brew install docker
    brew list hammerspoon &>/dev/null || brew install hammerspoon
    brew list alfred &>/dev/null || brew install alfred

    brew list iandol/adobe-fonts/font-source-code-pro &/dev/null || brew install iandol/adobe-fonts/font-source-code-pro
  fi
}


VIM_DIR=$DOTFILES_ROOT/.vim

mkdir -p $VIM_DIR/autoload

: "Install vim-plug" && {
  if ! [ -f "$VIM_DIR/autoload/plug.vim" ] ; then
    curl -fLo $VIM_DIR/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    log_pass "vim: Install vim-plug"
  fi
}

: "Install tmux-plugins" && {
  if ! [ -d "$HOME/.tmux/plugins/tpm" ] ; then
    mkdir -p $HOME/.tmux/plugins/
    git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm
  fi
}
