# Prefix
set-option -g prefix C-q
# デフォルトのPrefixを解除
unbind C-b
bind q send-prefix

### Options
# Zsh
set-option -g default-shell /bin/zsh
# 256色端末を使用する
set-option -g default-terminal screen-256color
# コピー・選択モードのキーバインドをviに
set-window-option -g mode-keys vi

set-option -g pane-border-lines single

# Vimのモード切り替えが重いので。
set -s escape-time 0

# Status ber
set-option -g status-interval 1
set-option -g status-left-length 30

set-window-option -g mouse on

set-option -g renumber-windows on

set-option -g default-terminal "xterm"

set-option -g default-command "reattach-to-user-namespace -l zsh"

# https://github.com/dandavison/delta#24-bit-color-truecolor
set -ga terminal-overrides ",xterm-256color:Tc"

### Key bindings

# ペイン番号表示
bind i display-panes

# Reload conf
bind r source-file ~/.tmux.conf\; display-message "Reloaded."

# 新しいペインを同一ディレクトリで開く
bind c new-window -c '#{pane_current_path}'
bind '"' split-window -c '#{pane_current_path}'
bind % split-window -h -c '#{pane_current_path}'

# zoom pane
bind y resize-pane -Z

# 選択パネルの強調
set -g window-status-current-style fg=cyan,bg=black,bold
set -g pane-active-border-style fg=colour247,bg=black

## http://qiita.com/upinetree/items/cd80bc7865c52091be10

# Use vim keybindings in copy mode
setw -g mode-keys vi
# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection

bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# Update default binding of `Enter` to also use copy-pipe
unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe "reattach-to-user-namespace pbcopy"

unbind-key -T copy-mode-vi C-v
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

unbind-key -T copy-mode-vi [
bind-key -T copy-mode-vi [ send-keys -X begin-selection
unbind-key -T copy-mode-vi ]
bind-key -T copy-mode-vi ] send-keys -X copy-selection

# http://qiita.com/nyarla/items/034496c3a411d1deb484
set -g status-interval 0

# Plugins
# https://github.com/tmux-plugins/tpm
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-cpu'
#set -g @plugin 'tmux-plugins/tmux-net-speed'
set -g @plugin 'mirosval/tmux-net-speed'
set -g @download_speed_format "%10s"
set -g @upload_speed_format "%10s"
set -g @net_speed_format "D:%10s U:%10s"

set -g @plugin 'gmoe/tmux-wifi'

set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @online_icon "Online"
set -g @offline_icon "Offline"

set -g status-right '#{prefix_highlight} | %Y-%m-%d (%a) %H:%M'
#set -g status-right '#{prefix_highlight} #{cpu_bg_color} CPU: #{cpu_percentage} | RAM: #{ram_percentage} | #{online_status} | %Y-%m-%d (%a) %H:%M '
#set -g status-right '#{prefix_highlight} #{cpu_bg_color} CPU: #{cpu_percentage} | RAM: #{ram_percentage} | #{online_status} | WiFi: #{wifi_strength} | %Y-%m-%d (%a) %H:%M '
#set -g status-right '#{prefix_highlight} #{cpu_bg_color} CPU: #{cpu_icon} #{cpu_percentage} | WiFi: #{wifi_strength} | %Y-%m-%d (%a) %H:%M '
#set -g status-right '#{prefix_highlight} #{cpu_bg_color} | CPU: #{cpu_icon} #{cpu_percentage} | Network: #{net_speed} | WiFi: #{wifi_ssid} #{wifi_icon} | %Y-%m-%d (%a) %H:%M '
set-option -g status-right-length 120

set -g @plugin 'tmux-plugins/tmux-pain-control'
# Navigation       : prefix + {hjkl}
# Resizing panes   : prefix + shift + {hjkl}
# Splitting panes  : prefix + {|-\_}
# Swapping windows : prefix + {<>}

# TODO tmux-sensibleで設定済みの記述を削除する
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'tmux-plugins/tmux-copycat'
# prefix + / - regex search (strings work too)
# prefix + ctrl-f - simple file search
# prefix + ctrl-g - jumping over git status files (best used after git status command)

set -g @plugin 'Morantron/tmux-fingers'
# prefix + F - finger mode

#set -g @plugin 'tmux-plugins/tmux-sidebar'
#set -g @sidebar-tree-command 'exa -T -L 1 --git-ignore'
#set -g @sidebar-tree 'e'
#set -g @sidebar-tree-focus 'w'

set -g @plugin 'addisonlynch/tmux-sidebar-plus'
set -g @sidebar-plus-sidebar-key 'e'
set -g @sidebar-plus-layout-key 'w'

set -g @plugin 'tmux-plugins/tmux-sessionist'
# prefix + g - prompts for session name and switches to it. Performs 'kind-of' name completion
# prefix + shift-c - prompt for creating a new session by name.
# prefix + shift-x - kill current session without detaching tmux.
# prefix + shift-s - switches to the last session.
# prefix + @ - promote current pane into a new session.
# prefix + t<secondary-key> - join currently marked pane (prefix + m) to current session/window, and switch to it
# secondary-keys
#   h, -, ": join horizontally
#   v, |, %: join vertically
#   f, @: join full screen

set -g @plugin 'jbnicolai/tmux-fpp'
# prefix + f - "fpp" for a new window with a Facebook PathPicker selection of your tty.

set -g @plugin 'tmux-plugins/tmux-open'
# In tmux copy mode:
#   prefix + o - "open" a highlighted selection with the system default program. open for OS X or xdg-open for Linux.
#   prefix + ctrl-o - open a highlighted selection with the $EDITOR
#   prefix + shift-s - search the highlighted selection directly inside a search engine (defaults to google).

set -g @plugin 'wfxr/tmux-fzf-url'
# prefix + u - listing all urls on bottom pane
set -g @fzf-url-bind 'u'

run -b '~/.tmux/plugins/tpm/tpm'

# window の作成, 移動
#bind -n M-c new-window -c "#{pane_current_path}"
#bind -n M-d next-window
#bind -n M-a previous-window

# session の作成, 移動
bind -n M-C new-session
#bind -n M-k switch-client -n
#bind -n M-j switch-client -p

set -g status-left "#[fg=colour108,bg=colour237,bold] [#S:#I:#P] "

# List sessions, windows, panes
bind -n M-t choose-tree
# List sessions & windows (without panes)
bind -n M-r choose-tree -w
# List sessions
bind -n M-e choose-session

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-p' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-p' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
bind-key -T copy-mode-vi 'M-p' select-pane -l
